<div class="container mx-auto px-4 sm:px-6 lg:px-8">
  <h1 class="text-3xl font-bold mb-6 text-center sm:text-left">Generate Review Request Link</h1>
  
  <form id="reviewRequestForm" class="space-y-6">
    <div class="form-control">
      <label for="clientSelect" class="label">
        <span class="label-text text-base">Select Client</span>
      </label>
      <select id="clientSelect" name="clientId" class="select select-bordered w-full" required>
        <option value="">Select a client</option>
        <!-- Client options will be populated here -->
      </select>
    </div>

    <div class="form-control">
      <label for="language" class="label">
        <span class="label-text text-base">Language</span>
      </label>
      <select id="language" name="language" class="select select-bordered w-full" required>
        <option value="">Select a language</option>
        <option value="english">English</option>
        <option value="french">French</option>
      </select>
    </div>

    <div class="form-control">
      <label for="googleReviewLink" class="label">
        <span class="label-text text-base">Google Review Link</span>
      </label>
      <input type="url" id="googleReviewLink" name="googleReviewLink" class="input input-bordered" placeholder="Enter your Google Review link here" required>
    </div>

    <div class="form-control">
      <button type="submit" class="btn btn-primary">Generate Link</button>
    </div>
  </form>

  <div id="generatedLinkContainer" class="mt-6 hidden">
    <h2 class="text-xl font-semibold mb-2">Generated Link:</h2>
    <div class="flex items-center">
      <input type="text" id="generatedLink" class="input input-bordered flex-grow mr-2" readonly>
      <button onclick="copyToClipboard()" class="btn btn-secondary">Copy</button>
    </div>
  </div>
</div>

<script>
  let clients = [];
  let userId = '';

  async function fetchClients() {
    try {
      const response = await fetch('/dashboard/clients/all', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,
          'Content-Type': 'application/json'
        }
      });
      if (!response.ok) {
        throw new Error('Failed to fetch clients');
      }
      const data = await response.json();
      clients = data;
      populateClientSelect();
    } catch (error) {
      console.error('Error fetching clients:', error);
    }
  }

  function populateClientSelect() {
    const clientSelect = document.getElementById('clientSelect');
    clientSelect.innerHTML = '<option value="">Select a client</option>';
    clients.forEach(client => {
      const option = document.createElement('option');
      option.value = client.id;
      option.textContent = `${client.name} ${client.last_name}`;
      clientSelect.appendChild(option);
    });
  }

  document.getElementById('reviewRequestForm').addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const clientId = formData.get('clientId');
    const language = formData.get('language');
    const googleReviewLink = formData.get('googleReviewLink');

    const selectedClient = clients.find(client => client.id === clientId);
    const clientName = selectedClient ? `${selectedClient.name} ${selectedClient.last_name}` : '';

    const encodedClientName = encodeURIComponent(clientName);
    const encodedLanguage = encodeURIComponent(language);
    const encodedGoogleReviewLink = encodeURIComponent(googleReviewLink);

    const generatedLink = `${window.location.origin}/review-requests/review/me/rn?userId=${userId}&client=${encodedClientName}&language=${encodedLanguage}&googleReviewLink=${encodedGoogleReviewLink}`;

    document.getElementById('generatedLink').value = generatedLink;
    document.getElementById('generatedLinkContainer').classList.remove('hidden');
  });

  function copyToClipboard() {
    const generatedLink = document.getElementById('generatedLink');
    generatedLink.select();
    document.execCommand('copy');
    alert('Link copied to clipboard!');
  }

  document.addEventListener('DOMContentLoaded', fetchClients);
</script>
